{
  "openapi": "3.0.3",
  "info": {
    "title": "Social Network",
    "description": "This is a homework project for Service-Oriented Architectures course",
    "version": "0.3.0"
  },
  "tags": [
    {
      "name": "users",
      "description": "User registration, authentication and profile information"
    },
    {
      "name": "content",
      "description": "User-generated posts"
    },
    {
      "name": "interactions",
      "description": "User interactions with posts"
    },
    {
      "name": "statistics",
      "description": "Statistics of user interactions"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "summary": "Get JWT token for user",
        "description": "Login into account with login and password and get a JWT token for that user",
        "tags": [
          "users"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "Alex"
                  },
                  "password": {
                    "type": "string",
                    "example": "P@ssW0rd"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jwt": {
                      "type": "string",
                      "description": "JWT for registered user",
                      "example": "example.jwt.token"
                    }
                  },
                  "required": [
                    "jwt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Incorrect credentials"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Register new user",
        "description": "Make a new user with given email, username and password",
        "tags": [
          "users"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "alex@example.com"
                  },
                  "username": {
                    "type": "string",
                    "example": "Alex"
                  },
                  "password": {
                    "type": "string",
                    "example": "P@ssW0rd"
                  }
                },
                "required": [
                  "email",
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "type": "string",
                      "description": "JWT for registered user",
                      "example": "example.jwt.token"
                    }
                  },
                  "required": [
                    "jwt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid username, password or email supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update user information",
        "description": "Update fields in user profile. Empty field means no change",
        "tags": [
          "users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Updated email",
                    "format": "email",
                    "example": "alex@example.com"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "Updated first name",
                    "example": "Alex"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "Updated last name",
                    "example": "Dat"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date",
                    "description": "Updated date of birth",
                    "example": "1970-12-31T00:00:00.000Z"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Updated phone number",
                    "example": "800-555-0100"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Unsuccessful operation, one of new values is invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Authentication has failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "summary": "Get user information",
        "description": "Get all fields for user",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Alex"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "summary": "Create a new post",
        "description": "Creates a new post for a user",
        "tags": [
          "content"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the post",
                    "example": "Example post title"
                  },
                  "content": {
                    "type": "string",
                    "description": "Content of the post",
                    "example": "Example post content"
                  },
                  "isPrivate": {
                    "type": "boolean",
                    "description": "Is post private",
                    "example": false
                  },
                  "tags": {
                    "type": "array",
                    "description": "List of tags",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "work",
                      "Golang"
                    ]
                  }
                },
                "required": [
                  "title",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Authentication has failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get a page of post list",
        "description": "Get a list of available posts on a specific page",
        "tags": [
          "content"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalPages": {
                      "type": "integer",
                      "description": "The total number of pages available",
                      "example": 3
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "example": 1
                      },
                      "description": "List of available posts IDs for the current page"
                    }
                  },
                  "required": [
                    "totalPages",
                    "posts"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Page not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "summary": "Get post content",
        "tags": [
          "content"
        ],
        "parameters": [
          {
            "name": "postId",
            "description": "Post ID",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update a post",
        "description": "Updates an existing post",
        "tags": [
          "content"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the post to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated post title"
                  },
                  "content": {
                    "type": "string",
                    "example": "Updated post content"
                  },
                  "isPrivate": {
                    "type": "boolean",
                    "description": "Is the post private",
                    "example": true
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of tags",
                    "example": [
                      "work",
                      "update"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostInfo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Authentication has failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a post",
        "description": "Deletes a specific post",
        "tags": [
          "content"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the post to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Post successfully deleted"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access to delete the post"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}/likes": {
      "post": {
        "summary": "Like a post",
        "description": "Leave a like under the post",
        "tags": [
          "interactions"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the post to like"
          }
        ],
        "responses": {
          "200": {
            "description": "Post successfully liked"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}/comments": {
      "post": {
        "summary": "Leave a comment",
        "description": "Leave a comment under the post",
        "tags": [
          "interactions"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the post to leave a comment under"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "Example comment under the post"
                  }
                },
                "required": [
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Get a page of comments list",
        "description": "Get a page of the comments list for specific post",
        "tags": [
          "interactions"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalPages": {
                      "type": "integer",
                      "description": "The total number of pages available",
                      "example": 3
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Example comment under the post"
                      },
                      "description": "List of Comments"
                    }
                  },
                  "required": [
                    "totalPages",
                    "comments"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access or page not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}/stats": {
      "get": {
        "summary": "Statistics for the post",
        "description": "Number of views, likes and comments for the post",
        "tags": [
          "statistics"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "views": {
                      "type": "integer",
                      "example": 10
                    },
                    "likes": {
                      "type": "integer",
                      "example": 2
                    },
                    "comments": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "required": [
                    "views",
                    "likes",
                    "comments"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}/stats/views": {
      "get": {
        "summary": "Post views by day",
        "description": "Get post viewcount by day",
        "tags": [
          "statistics"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-30T00:00:00.000Z"
                      },
                      "views": {
                        "type": "integer",
                        "example": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}/stats/likes": {
      "get": {
        "summary": "Post likes by day",
        "description": "Get post likecount by day",
        "tags": [
          "statistics"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-30T00:00:00.000Z"
                      },
                      "likes": {
                        "type": "integer",
                        "example": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/posts/{postId}/stats/comments": {
      "get": {
        "summary": "Post comments by day",
        "description": "Get post commentcount by day",
        "tags": [
          "statistics"
        ],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "day": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-30T00:00:00.000Z"
                      },
                      "likes": {
                        "type": "integer",
                        "example": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication has failed"
          },
          "404": {
            "description": "Post not found or no access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Authorization header using the Bearer scheme. Enter 'Bearer [token]'"
      }
    },
    "schemas": {
      "Profile": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "alex@example.com"
          },
          "firstName": {
            "type": "string",
            "example": "Alex"
          },
          "lastName": {
            "type": "string",
            "example": "Dat"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1970-12-31T00:00:00.000Z"
          },
          "phoneNumber": {
            "type": "string",
            "example": "800-555-0100"
          },
          "createdAt": {
            "type": "integer",
            "example": 1740945570
          },
          "lastEditedAt": {
            "type": "integer",
            "example": 1740945570
          }
        },
        "required": [
          "username",
          "email"
        ]
      },
      "PostInfo": {
        "type": "object",
        "properties": {
          "postId": {
            "type": "integer",
            "format": "uint32",
            "description": "Post ID"
          },
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "content": {
            "type": "string",
            "description": "Post content"
          },
          "author": {
            "type": "string",
            "description": "Post author username"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of post creation"
          },
          "lastEditedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last post edit"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "Is post private"
          },
          "tags": {
            "type": "array",
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "example": [
              "work",
              "Golang"
            ]
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Example error message"
          }
        },
        "required": [
          "error"
        ]
      }
    }
  }
}
